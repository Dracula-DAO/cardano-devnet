#!/usr/bin/env bash

# Based on demo/prepare-devnet.sh script from hydra repo. Added in block time customization
# and auto-startup for cardano-node.  ogmios is started to provide syncronization and
# mempool monitoring.
# Hydra repo: https://github.com/input-output-hk/hydra

# Prepare a "target" directory holding credentials, a dummy topology and
# "up-to-date" genesis files. If the directory exists, it is wiped out.
set -e

if [[ ! $1 == ?(-)+([0-9]) ]]; then
    SCRIPTNAME=$(basename $0)
    echo "usage: $SCRIPTNAME <block time>"
    exit -1
fi

# PROJECT_ROOT comes from jambhala environment
if [[ ! -v PROJECT_ROOT ]]; then
    BASEDIR=.
else
    BASEDIR=$PROJECT_ROOT/cardano-devnet
fi
TARGETDIR="$BASEDIR/target"
CARDANO_NODE_SOCKET_PATH="$TARGETDIR/node.socket"

[ -d "$TARGETDIR" ] && { echo "Cleaning up directory $TARGETDIR" ; sudo rm -r $TARGETDIR ; }

cp -af "$BASEDIR/config/genesis/" "$TARGETDIR"
cp -af "$BASEDIR/config/protocol-parameters.json" "$TARGETDIR"

# Copy faucet keys, address to the jambhala assets directory
if [[ -v PROJECT_ROOT ]]; then
    echo "Copying faucet keys into jambhala assets directory"
    cp $BASEDIR/config/credentials/faucet.vkey $PROJECT_ROOT/cardano-cli-guru/assets/keys
    cp $BASEDIR/config/credentials/faucet.skey $PROJECT_ROOT/cardano-cli-guru/assets/keys
    cp $BASEDIR/config/credentials/faucet.addr $PROJECT_ROOT/cardano-cli-guru/assets/addr
fi

# Update start time params
echo '{"Producers": []}' > "$TARGETDIR/topology.json"
sed -i "s/\"startTime\": [0-9]*/\"startTime\": $(date +%s)/" "$TARGETDIR/genesis-byron.json" && \
sed -i "s/\"systemStart\": \".*\"/\"systemStart\": \"$(date -u +%FT%TZ)\"/" "$TARGETDIR/genesis-shelley.json"

# Calculate activeSlotsCoeff from slot time parameter and add to genesis file
COEFF=$(jq -n 1/$1)
echo "Setting slot time to $1: coeffecient=$COEFF"
sed -i "s/\"activeSlotsCoeff\": .*/\"activeSlotsCoeff\": $COEFF,/" "$TARGETDIR/genesis-shelley.json"

# Recalculate genesis hashes
BYRON_HASH=$(cardano-cli byron genesis print-genesis-hash --genesis-json $TARGETDIR/genesis-byron.json)
echo "Byron hash: $BYRON_HASH"
sed -i "s/\"ByronGenesisHash\": .*/\"ByronGenesisHash\": \"$BYRON_HASH\",/" "$TARGETDIR/cardano-node.json"
SHELLEY_HASH=$(cardano-cli genesis hash --genesis $TARGETDIR/genesis-shelley.json)
echo "Shelley hash: $SHELLEY_HASH"
sed -i "s/\"ShelleyGenesisHash\": .*/\"ShelleyGenesisHash\": \"$SHELLEY_HASH\",/" "$TARGETDIR/cardano-node.json"
ALONZO_HASH=$(cardano-cli genesis hash --genesis $TARGETDIR/genesis-alonzo.json)
echo "Alonzo hash: $ALONZO_HASH"
sed -i "s/\"AlonzoGenesisHash\": .*/\"AlonzoGenesisHash\": \"$ALONZO_HASH\",/" "$TARGETDIR/cardano-node.json"
CONWAY_HASH=$(cardano-cli genesis hash --genesis $TARGETDIR/genesis-conway.json)
echo "Conway hash: $CONWAY_HASH"
sed -i "s/\"ConwayGenesisHash\": .*/\"ConwayGenesisHash\": \"$CONWAY_HASH\",/" "$TARGETDIR/cardano-node.json"

find $TARGETDIR -type f -exec chmod 0400 {} \;
echo "Prepared devnet, starting cluster now"

# cardano-node assumed to be in path
echo cardano-node run \
  --config $TARGETDIR/cardano-node.json \
  --topology $TARGETDIR/topology.json \
  --database-path $TARGETDIR/db \
  --socket-path $CARDANO_NODE_SOCKET_PATH \
  --shelley-operational-certificate $TARGETDIR/opcert.cert \
  --shelley-kes-key $TARGETDIR/kes.skey \
  --shelley-vrf-key $TARGETDIR/vrf.skey &
cardano-node run \
  --config $TARGETDIR/cardano-node.json \
  --topology $TARGETDIR/topology.json \
  --database-path $TARGETDIR/db \
  --socket-path $CARDANO_NODE_SOCKET_PATH \
  --shelley-operational-certificate $TARGETDIR/opcert.cert \
  --shelley-kes-key $TARGETDIR/kes.skey \
  --shelley-vrf-key $TARGETDIR/vrf.skey &

# ogmios >6.0.0 required (assumed to be in path)
ogmios --node-socket $CARDANO_NODE_SOCKET_PATH \
       --node-config $TARGETDIR/cardano-node.json > /dev/null 2>&1

